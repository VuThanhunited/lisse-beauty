const mongoose = require("mongoose");
const bcrypt = require("bcryptjs");
const { User, Service } = require("../models");
require("dotenv").config();

const seedDatabase = async () => {
  try {
    // Connect to MongoDB
    await mongoose.connect(process.env.MONGODB_URI);
    console.log("üì¶ Connected to MongoDB");

    // Clear existing data (optional)
    await User.deleteMany({});
    await Service.deleteMany({});
    console.log("üóëÔ∏è Cleared existing data");

    // Create admin user
    const adminUser = await User.create({
      name: "Admin Lisse Beauty",
      email: process.env.ADMIN_EMAIL || "admin@lissebeauty.com",
      phone: "0912345678",
      password: process.env.ADMIN_PASSWORD || "admin123",
      role: "admin",
      isActive: true,
      isEmailVerified: true,
    });

    console.log("üë§ Admin user created:", adminUser.email);

    // Create sample users
    const sampleUsers = [
      {
        name: "Nguy·ªÖn Thu·ª∑ Ti√™n",
        email: "tien@example.com",
        phone: "0987654321",
        password: "password123",
        role: "user",
      },
      {
        name: "Nguy·ªÖn H√¢n Tr√∫c",
        email: "truc@example.com",
        phone: "0976543210",
        password: "password123",
        role: "user",
      },
    ];

    const users = await User.create(sampleUsers);
    console.log(`üë• Created ${users.length} sample users`);

    // Create sample services
    const sampleServices = [
      {
        name: "Glowing Brow",
        description:
          "Glowing Brow l√† g√¨? Gi·∫£i ph√°p ch√¢n m√†y t·ª± nhi√™n, nh·∫π nh√†ng, s·∫Øc n√©t kh√¥ng l·ªô d·∫•u phun xƒÉm",
        fullDescription:
          "Glowing Brow l√† k·ªπ thu·∫≠t l√†m ƒë·∫πp ch√¢n m√†y ti√™n ti·∫øn, t·∫°o ra nh·ªØng ƒë∆∞·ªùng n√©t t·ª± nhi√™n v√† s·∫Øc n√©t m√† kh√¥ng ƒë·ªÉ l·∫°i d·∫•u v·∫øt c·ªßa phun xƒÉm truy·ªÅn th·ªëng.",
        image:
          "https://images.unsplash.com/photo-1637851496670-2bdc6c548d27?crop=entropy&cs=srgb&fm=jpg&ixid=M3w3NTAwNDR8MHwxfHNlYXJjaHw0fHx3b21hbiUyMGV5ZWJyb3dzJTIwYmVhdXR5JTIwc2tpbmNhcmV8ZW58MHwxfHx8MTc1NjIyMTE3N3ww&ixlib=rb-4.1.0&q=85",
        price: 2500000,
        originalPrice: 3000000,
        duration: 120,
        category: "eyebrow",
        features: ["T·ª± nhi√™n nh∆∞ th·∫≠t", "Kh√¥ng ƒëau", "B·ªÅn m√†u l√¢u"],
        benefits: [
          "Ti·∫øt ki·ªám th·ªùi gian makeup",
          "T·ª± tin h∆°n",
          "Ph√π h·ª£p m·ªçi ƒë·ªô tu·ªïi",
        ],
        isPopular: true,
        isFeatured: true,
        tags: ["ch√¢n m√†y", "t·ª± nhi√™n", "glowing"],
        detailUrl: "/beauty-knowledge/glowing-brow",
        createdBy: adminUser._id,
      },
      {
        name: "Hairstroke",
        description:
          "T·∫°o s·ª£i Hairstroke ‚Äì C√¥ng ngh·ªá ch√¢n m√¢y t·ª± nhi√™n nh∆∞ th·∫≠t",
        fullDescription:
          "T·∫°o s·ª£i Hairstroke l√† k·ªπ thu·∫≠t l√†m ƒë·∫πp ch√¢n m√†y ti√™n ti·∫øn nh·∫•t hi·ªán nay, t·∫°o ra t·ª´ng s·ª£i ch√¢n m√†y t·ª± nhi√™n nh∆∞ th·∫≠t.",
        image:
          "https://images.unsplash.com/photo-1579297462453-2ec77b1dd3ac?crop=entropy&cs=srgb&fm=jpg&ixid=M3w3NTAwNDR8MHwxfHNlYXJjaHw0fHx3b21hbiUyMGV5ZWJyb3dzJTIwbmF0dXJhbCUyMGJlYXV0eXxlbnwwfDF8fHwxNzU2MjIxMTc4fDA&ixlib=rb-4.1.0&q=85",
        price: 2800000,
        originalPrice: 3200000,
        duration: 150,
        category: "eyebrow",
        features: [
          "S·ª£i ch√¢n m√†y s·∫Øc n√©t",
          "C√¥ng ngh·ªá ti√™n ti·∫øn",
          "Ph·ª•c h·ªìi nhanh",
        ],
        benefits: ["Che khuy·∫øt ƒëi·ªÉm", "TƒÉng th·∫©m m·ªπ", "B·ªÅn ƒë·∫πp l√¢u d√†i"],
        isPopular: true,
        isFeatured: true,
        tags: ["ch√¢n m√†y", "hairstroke", "s·ª£i t·ª± nhi√™n"],
        detailUrl: "/beauty-knowledge/hairstroke",
        createdBy: adminUser._id,
      },
    ];

    const services = await Service.create(sampleServices);
    console.log(`üéØ Created ${services.length} sample services`);

    console.log("‚úÖ Database seeded successfully!");
    console.log("üîë Admin login:", {
      email: adminUser.email,
      password: process.env.ADMIN_PASSWORD || "admin123",
    });
  } catch (error) {
    console.error("‚ùå Error seeding database:", error);
  } finally {
    await mongoose.connection.close();
    console.log("üì¶ Database connection closed");
  }
};

// Run the seed function if this file is executed directly
if (require.main === module) {
  seedDatabase();
}

module.exports = seedDatabase;
